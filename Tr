def triangle_type(a, b, c):
    # Проверка, что все аргументы являются числами
    if not all(isinstance(side, (int, float)) for side in [a, b, c]):
        return "Ошибка: все стороны должны быть числами"
    
    # Проверка на положительность сторон
    if a <= 0 or b <= 0 or c <= 0:
        return "Не треугольник (стороны должны быть положительными)"
    
    # Проверка неравенства треугольника
    if a + b <= c or a + c <= b or b + c <= a:
        return "Не треугольник (нарушено неравенство треугольника)"
    
    # Определение типа треугольника
    if a == b == c:
        return "Равносторонний"
    elif a == b or a == c or b == c:
        return "Равнобедренный"
    else:
        return "Разносторонний"

# Тест-кейсы
test_cases = [
    (3, 4, 5),         # Разносторонний
    (5, 5, 5),         # Равносторонний
    (5, 5, 7),         # Равнобедренный
    (1, 2, 3),         # Не треугольник
    (-1, 2, 2),        # Отрицательные стороны
    (0, 0, 0),         # Нулевые стороны
    (2, 2, 4),         # Вырожденный треугольник
    (5.5, 5.5, 5.5),   # Равносторонний с дробными числами
    ("a", 2, 2),       # Буквы вместо чисел
    (True, 2, 2),      # Булево значение
    (None, 2, 2),      # None значение
    ([], 2, 2),        # Пустой список
    (5, "5", 5),       # Строка вместо числа
    (1e6, 1e6, 1e6),   # Большие числа
    (0.1, 0.1, 0.1),   # Маленькие числа
]

print("Результаты тестов:")
print("-----------------")
for i, (a, b, c) in enumerate(test_cases, 1):
    print(f"Тест {i}: {a}, {b}, {c} -> {triangle_type(a, b, c)}")
